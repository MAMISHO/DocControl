// Generated by CoffeeScript 1.3.3

describe("genWidgetDef", function() {
  beforeEach(function() {
    this.schema = {
      name: "name",
      field: "CharField",
      maxLength: 40,
      widget: {
        label: "Name"
      }
    };
    return this.output = {
      kind: 'widgets.Widget',
      fieldName: 'name',
      field: 'CharField',
      maxLength: 40,
      label: 'Name'
    };
  });
  it("should create a widget kind definition from a schema", function() {
    var kind;
    kind = _genWidgetDef(this.schema);
    return expect(kind).toEqual(this.output);
  });
  return it("should override the defualt field widget when the widget kind is defined", function() {
    var kind;
    this.schema.widget.kind = "widgets.PasswordWidget";
    this.output.kind = "widgets.PasswordWidget";
    kind = _genWidgetDef(this.schema);
    return expect(kind).toEqual(this.output);
  });
});

describe("widgets.Form", function() {
  beforeEach(function() {
    this.schema = {
      name: "name",
      field: "CharField",
      maxLength: 40,
      widget: {
        label: "Name"
      }
    };
    return this.form = new widgets.Form({
      schema: this.schema
    });
  });
  return it("should create a widget and a field given a schema", function() {
    expect(this.form.fields instanceof fields.Field).toBe(true);
    return expect(this.form.widgets instanceof widgets.Widget).toBe(true);
  });
});
